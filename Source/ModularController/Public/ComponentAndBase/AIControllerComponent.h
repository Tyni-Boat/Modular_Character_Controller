// Copyright © 2023 by Tyni Boat. All Rights Reserved.

#pragma once
#include "AI/RVOAvoidanceInterface.h"
#include "GameFramework/NavMovementComponent.h"
#include "AIControllerComponent.generated.h"


UCLASS(ClassGroup = "Controllers", meta = (BlueprintSpawnableComponent))
class MODULARCONTROLLER_API UAIControllerComponent : public UNavMovementComponent, public IRVOAvoidanceInterface
{
	GENERATED_BODY()

public:
	// Sets default values for this component's properties
	UAIControllerComponent();
	
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Controllers|AI")
		FVector PathVelocity;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category = "Controllers|AI")
		float TargetDistance;

	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "Controllers|AI")
		FVector PathInput;

	UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = "Controllers|AI")
		float PathInputDistance;

protected:
	// Called when the game starts
	virtual void BeginPlay() override;

	//the delta time
	float _delta;

public:
	// Called every frame
	virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;

	virtual void RequestDirectMove(const FVector& MoveVelocity, bool bForceMaxSpeed) override;

	virtual void RequestPathMove(const FVector& MoveInput) override;


public:

	//This actor's avoidance group mask
	virtual int32 GetAvoidanceGroupMask() override;

	//Agent groups to avoid mask
	virtual int32 GetGroupsToAvoidMask() override;

	//Agent groups to ignore
	virtual int32 GetGroupsToIgnoreMask() override;

	//The scaled collider radius to consider for RVO avoidance
	virtual float GetRVOAvoidanceConsiderationRadius() override;

	//The scaled collider height to consider for RVO avoidance
	virtual float GetRVOAvoidanceHeight() override;

	//Get the Location from where the RVO avoidance should originate
	virtual FVector GetRVOAvoidanceOrigin() override;

	//The scaled collider radius to consider for RVO avoidance
	virtual float GetRVOAvoidanceRadius() override;

	//Return the AvoidanceUID assigned by the Avoidance Manager during registration
	virtual int32 GetRVOAvoidanceUID() override;

	//Returns the AvoidanceWeight assigned by the Avoidance Manager during registration
	virtual float GetRVOAvoidanceWeight() override;

	//The velocity of the avoiding entity
	virtual FVector GetVelocityForRVOConsideration() override;

	//Store the avoidance group mask
	virtual void SetAvoidanceGroupMask(int32 GroupFlags) override;

	//Store the groups to avoid mask
	virtual void SetGroupsToAvoidMask(int32 GroupFlags) override;

	//Store the groups to ignore mask
	virtual void SetGroupsToIgnoreMask(int32 GroupFlags) override;

	//BEGIN IRVOAvoidanceInterface
	virtual void SetRVOAvoidanceUID(int32 UID) override;

	//Store the AvoidanceWeight generated by the Avoidance Manager
	virtual void SetRVOAvoidanceWeight(float Weight) override;

};
